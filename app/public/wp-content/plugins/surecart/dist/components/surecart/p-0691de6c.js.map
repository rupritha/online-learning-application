{"version":3,"names":["maybeUpdateProcessor","ids","availableProcessors","map","processor_type","availableManualPaymentMethods","id","includes","selectedProcessor","_b","_a","window","wp","hooks","applyFilters","length","maybeUpdateMethod","availableMethodTypes","method","onChangeCheckout","onChangeProcessor","onChange"],"sources":["src/store/processors/watchers.ts"],"sourcesContent":["/**\n * Internal dependencies.\n */\nimport { onChange as onChangeCheckout } from '../checkout';\nimport { onChange as onChangeProcessor, state as selectedProcessor } from '../selected-processor';\nimport { availableManualPaymentMethods, availableMethodTypes, availableProcessors } from './getters';\nimport { onChange } from './store';\n\n/**\n * Look through available processors and maybe switch if the processor has been removed.\n */\nconst maybeUpdateProcessor = () => {\n  // get array of manual and regular processors ids.\n  const ids = [...availableProcessors().map(({ processor_type }) => processor_type), ...availableManualPaymentMethods().map(({ id }) => id)];\n  // selected processor is available.\n  if (ids.includes(selectedProcessor.id)) return;\n\n  if (!window?.wp?.hooks?.applyFilters || window.wp.hooks.applyFilters('surecart_auto_select_payment_method', true)) {\n    // set to first if we have one, otherwise unset.\n    selectedProcessor.id = ids?.length ? ids?.[0] : null;\n  }\n};\n\n/**\n * Look through available methods and maybe switch if the processor has been removed.\n */\nconst maybeUpdateMethod = () => {\n  // get method ids.\n  const ids = (availableMethodTypes() || []).map(({ id }) => id);\n  // if the processor is not mollie, unset the method.\n  if (selectedProcessor?.id !== 'mollie') {\n    selectedProcessor.method = null;\n    return;\n  }\n  // selected method is available\n  if (ids.includes(selectedProcessor.method)) return;\n  // if the current method is not available, set the first method.\n  selectedProcessor.method = ids?.length ? ids?.[0] : null;\n};\n\n// when the checkout changes, maybe update selection.\nonChangeCheckout('checkout', () => {\n  maybeUpdateProcessor();\n  maybeUpdateMethod();\n});\nonChangeProcessor('id', () => maybeUpdateProcessor());\n\n// when processors and methods are first loaded, select first one.\nonChange('processors', () => maybeUpdateProcessor());\nonChange('methods', () => maybeUpdateMethod());\n"],"mappings":"mIAWA,MAAMA,EAAuB,K,QAE3B,MAAMC,EAAM,IAAIC,IAAsBC,KAAI,EAAGC,oBAAqBA,OAAoBC,IAAgCF,KAAI,EAAGG,QAASA,KAEtI,GAAIL,EAAIM,SAASC,EAAkBF,IAAK,OAExC,MAAKG,GAAAC,EAAAC,SAAM,MAANA,cAAM,SAANA,OAAQC,MAAE,MAAAF,SAAA,SAAAA,EAAEG,SAAK,MAAAJ,SAAA,SAAAA,EAAEK,eAAgBH,OAAOC,GAAGC,MAAMC,aAAa,sCAAuC,MAAO,CAEjHN,EAAkBF,IAAKL,IAAG,MAAHA,SAAG,SAAHA,EAAKc,QAASd,IAAG,MAAHA,SAAG,SAAHA,EAAM,GAAK,I,GAOpD,MAAMe,EAAoB,KAExB,MAAMf,GAAOgB,KAA0B,IAAId,KAAI,EAAGG,QAASA,IAE3D,IAAIE,IAAiB,MAAjBA,SAAiB,SAAjBA,EAAmBF,MAAO,SAAU,CACtCE,EAAkBU,OAAS,KAC3B,M,CAGF,GAAIjB,EAAIM,SAASC,EAAkBU,QAAS,OAE5CV,EAAkBU,QAASjB,IAAG,MAAHA,SAAG,SAAHA,EAAKc,QAASd,IAAG,MAAHA,SAAG,SAAHA,EAAM,GAAK,IAAI,EAI1DkB,EAAiB,YAAY,KAC3BnB,IACAgB,GAAmB,IAErBI,EAAkB,MAAM,IAAMpB,MAG9BqB,EAAS,cAAc,IAAMrB,MAC7BqB,EAAS,WAAW,IAAML","ignoreList":[]}