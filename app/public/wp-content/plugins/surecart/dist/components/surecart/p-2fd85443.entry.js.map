{"version":3,"names":["scUpsellTotalsCss","ScUpsellTotalsStyle0","wp","i18n","__","sprintf","_c","_b","state","line_item","currency","toUpperCase","h","slot","this","getCurrencyToDisplay","class","_d","_f","_e","key","subtotal_display_amount","fees","data","fee","display_amount","tax_display_amount","style","_g","total_display_amount","renderConversion"],"sources":["src/components/controllers/upsell/sc-upsell-totals/sc-upsell-totals.css?tag=sc-upsell-totals&encapsulation=shadow","src/components/controllers/upsell/sc-upsell-totals/sc-upsell-totals.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nsc-divider {\n  margin: 16px 0 !important;\n}\n.conversion-description {\n  color: var(--sc-color-gray-500);\n  font-size: var(--sc-font-size-small);\n  margin-right: var(--sc-spacing-xx-small);\n}\n","/**\n * External dependencies.\n */\nimport { Component, Fragment, h } from '@stencil/core';\nimport { state } from '@store/upsell';\nimport { __, sprintf } from '@wordpress/i18n';\n@Component({\n  tag: 'sc-upsell-totals',\n  styleUrl: 'sc-upsell-totals.css',\n  shadow: true,\n})\nexport class ScUpsellTotals {\n  renderAmountDue() {\n    return state.amount_due > 0 ? state?.line_item?.total_display_amount : !!state?.line_item?.trial_amount ? __('Trial', 'surecart') : __('Free', 'surecart');\n  }\n\n  // Determine if the currency should be displayed to avoid duplication in the amount display.\n  getCurrencyToDisplay() {\n    return state?.line_item?.total_default_currency_display_amount?.toLowerCase()?.includes(state?.line_item?.currency?.toLowerCase())\n      ? ''\n      : state?.line_item?.currency?.toUpperCase();\n  }\n\n  renderConversion() {\n    // need to check the checkout for a few things.\n    const checkout = state?.checkout;\n\n    if (!checkout?.show_converted_total) {\n      return null;\n    }\n\n    // the currency is the same as the current currency.\n    if (checkout?.currency === checkout?.current_currency) {\n      return null;\n    }\n\n    // there is no amount due.\n    if (!state?.line_item?.total_amount) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <sc-divider></sc-divider>\n        <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n          <span slot=\"title\">\n            <slot name=\"charge-amount-description\">{sprintf(__('Payment Total', 'surecart'), state?.line_item?.currency?.toUpperCase())}</slot>\n          </span>\n          <span slot=\"price\">\n            {this.getCurrencyToDisplay() && <span class=\"currency-label\">{this.getCurrencyToDisplay()}</span>}\n            {state?.line_item?.total_default_currency_display_amount}\n          </span>\n        </sc-line-item>\n        <sc-line-item>\n          <span slot=\"description\" class=\"conversion-description\">\n           {/* translators: %s is the currency code */}\n            {sprintf(__('Your payment will be processed in %s.', 'surecart'), state?.line_item?.currency?.toUpperCase())}\n          </span>\n        </sc-line-item>\n      </Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <sc-summary open-text=\"Total\" closed-text=\"Total\" collapsible={true} collapsed={true}>\n        {!!state.line_item?.id && <span slot=\"price\">{this.renderAmountDue()}</span>}\n\n        <sc-divider></sc-divider>\n\n        <sc-line-item>\n          <span slot=\"description\">{__('Subtotal', 'surecart')}</span>\n          <span slot=\"price\">{state.line_item?.subtotal_display_amount}</span>\n        </sc-line-item>\n\n        {(state?.line_item?.fees?.data || [])\n          .filter(fee => fee.fee_type === 'upsell') // only upsell fees.\n          .map(fee => {\n            return (\n              <sc-line-item>\n                <span slot=\"description\">\n                  {fee.description} {`(${__('one time', 'surecart')})`}\n                </span>\n                <span slot=\"price\">{fee?.display_amount}</span>\n              </sc-line-item>\n            );\n          })}\n\n        {!!state.line_item?.tax_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Tax', 'surecart')}</span>\n            <span slot=\"price\">{state.line_item?.tax_display_amount}</span>\n          </sc-line-item>\n        )}\n\n        <sc-divider></sc-divider>\n\n        <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n          <span slot=\"title\">{__('Total', 'surecart')}</span>\n          <span slot=\"price\">{state.line_item?.total_display_amount}</span>\n        </sc-line-item>\n\n        {this.renderConversion()}\n      </sc-summary>\n    );\n  }\n}\n"],"mappings":"8bAAA,MAAMA,EAAoB,8LAC1B,MAAAC,EAAeD,E,6QCY+FE,GAAAC,KAAAC,GAAE,oBAAwBF,GAAAC,KAAAC,GAAE,kB,shCAiCtFF,GAAAC,KAAAE,QAAQH,GAAAC,KAAAC,GAAE,6BAAAE,GAAAC,EAAAC,IAAA,MAAAA,SAAA,SAAAA,EAAAC,aAAA,MAAAF,SAAA,SAAAA,EAAAG,YAAA,MAAAJ,SAAA,SAAAA,EAAAK,iBAAAC,EAAA,QAAAC,KAAA,SAAAC,KAAAC,wBAAAH,EAAA,QAAAI,MAAA,kBAAAF,KAAAC,yBAAAE,EAAAT,IAAA,MAAAA,SAAA,SAAAA,EAAAC,aAAA,MAAAQ,SAAA,S,6HAUjDf,GAAAC,KAAAE,QAAQH,GAAAC,KAAAC,GAAE,qDAAAc,GAAAC,EAAAX,IAAA,MAAAA,SAAA,SAAAA,EAAAC,aAAA,MAAAU,SAAA,SAAAA,EAAAT,YAAA,MAAAQ,SAAA,SAAAA,EAAAP,iB,ghBAeaT,GAAAC,KAAAC,GAAE,wBAAAQ,EAAA,QAAAQ,IAAA,2CAAAP,KAAA,UAAAN,EAAAC,EAAAC,aAAA,MAAAF,SAAA,SAAAA,EAAAc,6BAAAJ,GAAAX,EAAAE,IAAA,MAAAA,SAAA,SAAAA,EAAAC,aAAA,MAAAH,SAAA,SAAAA,EAAAgB,QAAA,MAAAL,SAAA,SAAAA,EAAAM,OAAA,I,qHAUGrB,GAAAC,KAAAC,GAAE,2BAAAQ,EAAA,QAAAC,KAAA,SAAAW,IAAA,MAAAA,SAAA,SAAAA,EAAAC,uB,uMASLvB,GAAAC,KAAAC,GAAE,mBAAAQ,EAAA,QAAAQ,IAAA,2CAAAP,KAAA,UAAAK,EAAAV,EAAAC,aAAA,MAAAS,SAAA,SAAAA,EAAAQ,qBAAAd,EAAA,cAAAQ,IAAA,6CAAAR,EAAA,gBAAAQ,IAAA,2CAAAO,MAAA,gDAAAf,EAAA,QAAAQ,IAAA,2CAAAP,KAAA,SAQVX,GAAAC,KAAAC,GAAE,qBAAAQ,EAAA,QAAAQ,IAAA,2CAAAP,KAAA,UAAAe,EAAApB,EAAAC,aAAA,MAAAmB,SAAA,SAAAA,EAAAC,uBAAAf,KAAAgB,mB","ignoreList":[]}