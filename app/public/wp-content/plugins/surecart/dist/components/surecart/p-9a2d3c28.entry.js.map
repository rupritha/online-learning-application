{"version":3,"names":["iconFiles","Map","requestIcon","url","has","get","request","fetch","then","async","response","ok","div","document","createElement","innerHTML","text","svg","firstElementChild","status","tagName","toLowerCase","outerHTML","set","scIconCss","ScIconStyle0","LABEL_MAPPINGS","wp","i18n","__","parser","DOMParser","scProductLineItemCss","ScProductLineItemStyle0","this","sku","purchasableStatus","h","key","class","part","trial","fees","map","fee","sprintf","name","price","quantity","removable","onClick","scRemove","emit","onKeyDown","e","tabIndex","exportparts","scQuantitySelectCss","ScQuantitySelectStyle0","disabled","min","button__decrease","decrease","ref","el","input","step","type","max","value","autocomplete","role","onChange","handleChange","onInput","handleInput","onFocus","handleFocus","onBlur","handleBlur","button__increase","increase"],"sources":["src/components/ui/icon/request.ts","src/components/ui/icon/sc-icon.css?tag=sc-icon&encapsulation=shadow","src/components/ui/icon/sc-icon.tsx","src/components/ui/product-line-item/sc-product-line-item.scss?tag=sc-product-line-item&encapsulation=shadow","src/components/ui/product-line-item/sc-product-line-item.tsx","src/components/ui/quantity-select/sc-quantity-select.scss?tag=sc-quantity-select&encapsulation=shadow","src/components/ui/quantity-select/sc-quantity-select.tsx"],"sourcesContent":["interface IconFile {\n  ok: boolean;\n  status: number;\n  svg: string;\n}\n\nconst iconFiles = new Map<string, Promise<IconFile>>();\n\nexport const requestIcon = (url: string) => {\n  if (iconFiles.has(url)) {\n    return iconFiles.get(url);\n  } else {\n    const request = fetch(url).then(async response => {\n      if (response.ok) {\n        const div = document.createElement('div');\n        div.innerHTML = await response.text();\n        const svg = div.firstElementChild;\n\n        return {\n          ok: response.ok,\n          status: response.status,\n          svg: svg && svg.tagName.toLowerCase() === 'svg' ? svg.outerHTML : '',\n        };\n      } else {\n        return {\n          ok: response.ok,\n          status: response.status,\n          svg: null,\n        };\n      }\n    }) as Promise<IconFile>;\n\n    iconFiles.set(url, request);\n    return request;\n  }\n};\n",":host {\n  --width: 1em;\n  --height: 1em;\n  display: inline-block;\n  width: var(--width);\n  height: var(--height);\n  contain: strict;\n  box-sizing: content-box !important;\n}\n.icon,\nsvg {\n  display: block;\n  height: 100%;\n  width: 100%;\n  stroke-width: var(--sc-icon-stroke-width, 2px);\n}\n","import { Component, Watch, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { getIconLibrary } from './library';\nimport { requestIcon } from './request';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * The icon's label used for accessibility.\n */\nconst LABEL_MAPPINGS = {\n  'chevron-down': __('Open', 'surecart'),\n  'chevron-up': __('Close', 'surecart'),\n  'chevron-right': __('Next', 'surecart'),\n  'chevron-left': __('Previous', 'surecart'),\n  'arrow-right': __('Next', 'surecart'),\n  'arrow-left': __('Previous', 'surecart'),\n  'arrow-down': __('Down', 'surecart'),\n  'arrow-up': __('Up', 'surecart'),\n  'alert-circle': __('Alert', 'surecart'),\n};\n\nconst parser = new DOMParser();\n\n@Component({\n  tag: 'sc-icon',\n  styleUrl: 'sc-icon.css',\n  assetsDirs: ['icon-assets'],\n  shadow: true,\n})\nexport class ScIcon {\n  @State() private svg = '';\n\n  /** The name of the icon to draw. */\n  @Prop({ reflect: true }) name: string;\n\n  /** An external URL of an SVG file. */\n  @Prop() src: string;\n\n  /** An alternative description to use for accessibility. If omitted, the name or src will be used to generate it. */\n  @Prop() label: string;\n\n  /** The name of a registered custom icon library. */\n  @Prop() library = 'default';\n\n  /** Emitted when the icon has loaded. */\n  @Event() scLoad: EventEmitter<void>;\n\n  /** @internal Fetches the icon and redraws it. Used to handle library registrations. */\n  redraw() {\n    this.setIcon();\n  }\n\n  componentWillLoad() {\n    this.setIcon();\n  }\n\n  getLabel() {\n    let label = '';\n    if (this.label) {\n      label = LABEL_MAPPINGS?.[this.label] || this.label;\n    } else if (this.name) {\n      label = (LABEL_MAPPINGS?.[this.name] || this.name).replace(/-/g, ' ');\n    } else if (this.src) {\n      label = this.src.replace(/.*\\//, '').replace(/-/g, ' ').replace(/\\.svg/i, '');\n    }\n\n    return label;\n  }\n\n  @Watch('name')\n  @Watch('src')\n  @Watch('library')\n  async setIcon() {\n    const library = getIconLibrary(this.library);\n    const url = this.getUrl();\n    if (url) {\n      try {\n        const file = await requestIcon(url)!;\n        if (url !== this.getUrl()) {\n          // If the url has changed while fetching the icon, ignore this request\n          return;\n        } else if (file.ok) {\n          const doc = parser.parseFromString(file.svg, 'text/html');\n          const svgEl = doc.body.querySelector('svg');\n\n          if (svgEl) {\n            if (library && library.mutator) {\n              library.mutator(svgEl);\n            }\n\n            this.svg = svgEl.outerHTML;\n            this.scLoad.emit();\n          } else {\n            this.svg = '';\n            console.error({ status: file?.status });\n          }\n        } else {\n          this.svg = '';\n          console.error({ status: file?.status });\n        }\n      } catch {\n        console.error({ status: -1 });\n      }\n    } else if (this.svg) {\n      // If we can't resolve a URL and an icon was previously set, remove it\n      this.svg = '';\n    }\n  }\n\n  private getUrl(): string {\n    const library = getIconLibrary(this.library);\n    if (this.name && library) {\n      return library.resolver(this.name);\n    } else {\n      return this.src;\n    }\n  }\n\n  render() {\n    return <div part=\"base\" class=\"icon\" role=\"img\" aria-label={this.getLabel()} innerHTML={this.svg}></div>;\n  }\n}\n",":host {\n  display: block;\n  font-family: var(--sc-font-sans);\n  --sc-product-line-item-line-gap: 6px;\n}\n\n.item {\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  gap: var(--sc-spacing-large);\n  justify-content: space-between;\n  align-items: stretch;\n  width: 100%;\n  border-bottom: none;\n  container-type: inline-size;\n\n  &__text-container {\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    display: flex;\n    flex-direction: column;\n    gap: var(--sc-product-line-item-line-gap);\n    justify-content: space-between;\n    align-items: stretch;\n    width: 100%;\n    border-bottom: none;\n  }\n\n  &__row {\n    display: flex;\n    gap: 18px;\n    justify-content: space-between;\n    align-items: stretch;\n    width: 100%;\n\n    &.stick-bottom {\n      margin-top: auto;\n    }\n  }\n\n  &__scratch-price {\n    text-decoration: line-through;\n    font-size: var(--sc-font-size-small);\n    line-height: 1;\n    color: var(--sc-input-help-text-color);\n    white-space: nowrap;\n  }\n\n  &__remove-container {\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    line-height: 1;\n    cursor: pointer;\n    color: var(--sc-input-help-text-color);\n    font-size: var(--sc-input-help-text-font-size-medium);\n  }\n}\n\n.item__text {\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  gap: 6px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex: 1 1 0%;\n}\n\n.item__text-details {\n  display: grid;\n  gap: var(--sc-product-line-item-line-gap);\n}\n\n.item__title {\n  box-sizing: border-box;\n  min-width: 0px;\n  margin: 0;\n  color: var(--sc-line-item-title-color, var(--sc-input-label-color));\n  font-size: var(--sc-font-size-medium);\n  font-weight: var(--sc-font-weight-semibold);\n  line-height: 1;\n  cursor: pointer;\n  display: -webkit-box;\n  display: -moz-box;\n  -webkit-box-orient: vertical;\n  -moz-box-orient: vertical;\n  -webkit-line-clamp: 3;\n  -moz-box-lines: 3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.item__suffix {\n  flex: 1;\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: start;\n  justify-content: space-between;\n  align-items: flex-end;\n  min-width: 100px;\n  margin-left: auto;\n  align-self: center;\n}\n\n.product-line-item__removable .item__suffix {\n  align-self: flex-start;\n}\n.product-line-item__editable .item__suffix {\n  align-self: flex-start;\n}\n\n.product-line-item__purchasable-status {\n  font-size: var(--sc-font-size-x-small);\n  color: var(--sc-input-error-text-color);\n}\n\n.item__price {\n  text-align: right;\n  max-width: 100%;\n  display: grid;\n  gap: var(--sc-product-line-item-line-gap);\n}\n\n.item__description {\n  color: var(--sc-price-label-color, var(--sc-input-help-text-color));\n  font-size: var(--sc-price-label-font-size, var(--sc-input-help-text-font-size-medium));\n  line-height: 1;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: var(--sc-product-line-item-line-gap);\n  text-wrap: pretty;\n\n  &:last-child {\n    align-items: flex-end;\n    text-align: right;\n  }\n}\n\n.item__image-placeholder {\n  width: var(--sc-product-line-item-image-size, 65px);\n  height: var(--sc-product-line-item-image-size, 65px);\n  background-color: var(--sc-input-border-color, var(--sc-input-border));\n  border-radius: 4px;\n  flex: 0 0 var(--sc-product-line-item-image-size, 65px);\n}\n\n.item__image,\n.attachment-thumbnail {\n  width: var(--sc-product-line-item-image-size, 65px);\n  height: var(--sc-product-line-item-image-size, 65px);\n  object-fit: cover;\n  border-radius: 4px;\n  border: solid 1px var(--sc-input-border-color, var(--sc-input-border));\n  display: block;\n  box-shadow: var(--sc-input-box-shadow);\n  align-self: flex-start;\n}\n\n@container (max-width: 380px) {\n  .item__image,\n  .item__image-placeholder {\n    display: var(--sc-product-line-item-mobile-image-display, none);\n  }\n}\n\n.product__description {\n  display: flex;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.price {\n  font-size: var(--sc-font-size-medium);\n  font-weight: var(--sc-font-weight-semibold);\n  color: var(--sc-input-label-color);\n  line-height: 1;\n  white-space: nowrap;\n  display: flex;\n  gap: 4px;\n  align-items: baseline;\n}\n\n.price__description {\n  font-size: var(--sc-font-size-small);\n  line-height: 1;\n  color: var(--sc-input-help-text-color);\n  text-align: right;\n  white-space: nowrap;\n}\n\n.item--is-rtl {\n  &.price {\n    text-align: right;\n  }\n  .item__price {\n    text-align: left;\n  }\n}\n\n.base {\n  display: grid;\n  gap: var(--sc-spacing-x-small);\n}\n\n.fee__description {\n  color: var(--sc-input-help-text-color);\n}\n\nsc-quantity-select::part(base) {\n  box-shadow: none;\n  background-color: transparent;\n}\n\nsc-quantity-select::part(base):not(:focus-within) {\n  border-color: transparent;\n}\n\nsc-quantity-select::part(input),\nsc-quantity-select::part(plus),\nsc-quantity-select::part(minus) {\n  background-color: transparent;\n}\n","import { Component, h, Prop, Event, EventEmitter, Element } from '@stencil/core';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { isRtl } from '../../../functions/page-align';\nimport { Fee, ImageAttributes } from '../../../types';\n\n/**\n * @part base - The component base\n * @part product-line-item - The product line item\n * @part image - The product image\n * @part text - The product text\n * @part title - The product title\n * @part suffix - The product suffix\n * @part price - The product price\n * @part price__amount - The product price amount\n * @part price__description - The product price description\n * @part price__scratch - The product price scratch\n * @part static-quantity - The product static quantity\n * @part remove-icon__base - The product remove icon\n * @part quantity - The product quantity\n * @part quantity__minus - The product quantity minus\n * @part quantity__minus-icon - The product quantity minus icon\n * @part quantity__plus - The product quantity plus\n * @part quantity__plus-icon - The product quantity plus icon\n * @part quantity__input - The product quantity input\n * @part line-item__price-description - The line item price description\n */\n@Component({\n  tag: 'sc-product-line-item',\n  styleUrl: 'sc-product-line-item.scss',\n  shadow: true,\n})\nexport class ScProductLineItem {\n  @Element() el: HTMLScProductLineItemElement;\n\n  /** Image attributes. */\n  @Prop() image: ImageAttributes;\n\n  /** Product name */\n  @Prop() name: string;\n\n  /** Product monetary amount */\n  @Prop() amount: string;\n\n  /** The line item scratch amount */\n  @Prop() scratch: string;\n\n  /** Product display amount */\n  @Prop() displayAmount: string;\n\n  /** Product scratch display amount */\n  @Prop() scratchDisplayAmount: string;\n\n  /** Product line item fees. */\n  @Prop() fees: Fee[];\n\n  /** Price name */\n  @Prop() price?: string;\n\n  /** Product variant label */\n  @Prop() variant: string = '';\n\n  /** Quantity */\n  @Prop() quantity: number;\n\n  /** Recurring interval (i.e. monthly, once, etc.) */\n  @Prop() interval: string;\n\n  /** Trial text */\n  @Prop() trial: string;\n\n  /** Is the line item removable */\n  @Prop() removable: boolean;\n\n  /** Can we select the quantity */\n  @Prop() editable: boolean = true;\n\n  /** The max allowed. */\n  @Prop() max: number;\n\n  /** The SKU. */\n  @Prop() sku: string = '';\n\n  /** The purchasable status display */\n  @Prop() purchasableStatus: string;\n\n  /** Emitted when the quantity changes. */\n  @Event({ bubbles: false }) scUpdateQuantity: EventEmitter<number>;\n\n  /** Emitted when the quantity changes. */\n  @Event({ bubbles: false }) scRemove: EventEmitter<void>;\n\n  render() {\n    const isImageFallback = this.image?.type === 'fallback';\n  \n    return (\n      <div class=\"base\" part=\"base\">\n        <div\n          part=\"product-line-item\"\n          class={{\n            'item': true,\n            'item--has-image': !!this.image?.src,\n            'item--is-rtl': isRtl(),\n            'product-line-item__editable': this.editable,\n            'product-line-item__removable': this.removable,\n          }}\n        >\n          {!!this.image?.src ? <img {...(this.image as any)} part={isImageFallback ? \"placeholder__image\" : \"image\" } class={isImageFallback ? \"item__image-placeholder\" : \"item__image\"} /> : <div class=\"item__image-placeholder\" part=\"placeholder__image\"></div>}\n          <div class=\"item__text-container\">\n            <div class=\"item__row\">\n              <div class=\"item__title\" part=\"title\">\n                <slot name=\"title\">{this.name}</slot>\n              </div>\n              <div class=\"price\" part=\"price__amount\">\n                {!!this.scratch && this.scratch !== this.amount && <span class=\"item__scratch-price\">{this.scratch}</span>}\n                {this.amount}\n                <div class=\"price__description\" part=\"price__description\">\n                  {this.interval}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"item__row\">\n              <div class=\"item__description\" part=\"description\">\n                {this.variant && <div>{this.variant}</div>}\n                {this.price && <div>{this.price}</div>}\n                {this.sku && (\n                  <div>\n                    {__('SKU:', 'surecart')} {this.sku}\n                  </div>\n                )}\n                {!!this.purchasableStatus && <div>{this.purchasableStatus}</div>}\n              </div>\n\n              <div class=\"item__description\" part=\"trial-fees\">\n                {!!this.trial && <div>{this.trial}</div>}\n                {(this.fees || []).map(fee => {\n                  return (\n                    <div>\n                      {fee?.display_amount} {fee?.description}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div class=\"item__row stick-bottom\">\n              {this.editable ? (\n                <sc-quantity-select\n                  max={this.max || Infinity}\n                  exportparts=\"base:quantity, minus:quantity__minus, minus-icon:quantity__minus-icon, plus:quantity__plus, plus-icon:quantity__plus-icon, input:quantity__input\"\n                  clickEl={this.el}\n                  quantity={this.quantity}\n                  size=\"small\"\n                  onScChange={e => e.detail && this.scUpdateQuantity.emit(e.detail)}\n                  aria-label={\n                    /** translators: %1$s: product name, %2$s: product price name */\n                    sprintf(__('Change Quantity - %1$s %2$s', 'surecart'), this.name, this.price)\n                  }\n                ></sc-quantity-select>\n              ) : (\n                <span class=\"item__description\" part=\"static-quantity\">\n                  {__('Qty:', 'surecart')} {this.quantity}\n                </span>\n              )}\n              {!!this.removable && (\n                <div\n                  class=\"item__remove-container\"\n                  onClick={() => this.scRemove.emit()}\n                  onKeyDown={e => {\n                    if (e.key === 'Enter') {\n                      this.scRemove.emit();\n                    }\n                  }}\n                  // translators: Remove Item - Product Name Product Price Name\n                  aria-label={sprintf(__('Remove Item - %1$s %2$s', 'surecart'), this.name, this.price)}\n                  tabIndex={0}\n                >\n                  <sc-icon exportparts=\"base:remove-icon__base\" class=\"item__remove\" name=\"x\" />\n                  <span class=\"item__remove-text\">{__('Remove', 'surecart')}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  --focus-ring: 0 0 0 var(--sc-focus-ring-width) var(--sc-focus-ring-color-primary);\n  --border-radius: var(--sc-quantity-border-radius, var(--sc-input-border-radius-small));\n  display: inline-block;\n}\n\n.input__control {\n  text-align: center;\n  line-height: 1;\n  border: none;\n  flex: 1;\n  max-width: var(--sc-quantity-input-max-width, 35px);\n  background-color: var(--sc-input-control-background-color, var(--sc-color-white));\n  color: var(--sc-input-control-color, var(--sc-color-black));\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  &::-webkit-search-decoration,\n  &::-webkit-search-cancel-button,\n  &::-webkit-search-results-button,\n  &::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    box-shadow: 0 0 0 var(--sc-input-height-large) var(--sc-input-background-color-hover) inset !important;\n    -webkit-text-fill-color: var(--sc-input-color);\n  }\n\n  &::placeholder {\n    color: var(--sc-input-placeholder-color);\n    user-select: none;\n  }\n\n  &:focus {\n    outline: none;\n  }\n}\n\n.quantity--trigger {\n  cursor: pointer;\n  white-space: nowrap;\n}\n\n.quantity {\n  position: relative;\n  display: inline-block;\n  width: var(--sc-quantity-select-width, 100px);\n  height: var(--sc-quantity-control-height, var(--sc-input-height-small));\n  display: flex;\n  align-items: stretch;\n  font-family: var(--sc-input-font-family);\n  font-weight: var(--sc-input-font-weight);\n  letter-spacing: var(--sc-input-letter-spacing);\n  background-color: var(--sc-input-background-color);\n  border: var(--sc-input-border);\n  border-radius: var(--border-radius);\n  vertical-align: middle;\n  box-shadow: var(--sc-input-box-shadow);\n  transition: var(--sc-input-transition, var(--sc-transition-medium)) color, var(--sc-input-transition, var(--sc-transition-medium)) border,\n    var(--sc-input-transition, var(--sc-transition-medium)) box-shadow;\n\n  &:hover:not(.quantity--disabled) {\n    background-color: var(--sc-input-background-color-hover);\n    border-color: var(--sc-input-border-color-hover);\n\n    .quantity__control {\n      color: var(--sc-input-color-hover);\n    }\n  }\n\n  &.quantity--focused:not(.quantity--disabled) {\n    background-color: var(--sc-input-background-color-focus);\n    border-color: var(--sc-input-border-color-focus);\n    box-shadow: var(--focus-ring);\n\n    .quantity__control {\n      color: var(--sc-input-color-focus);\n    }\n  }\n\n  &.quantity--disabled {\n    background-color: var(--sc-input-background-color-disabled);\n    border-color: var(--sc-input-border-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n\n    .input__control {\n      color: var(--sc-input-color-disabled);\n\n      &::placeholder {\n        color: var(--sc-input-placeholder-color-disabled);\n      }\n    }\n  }\n}\n\n.button__decrease,\n.button__increase {\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 0;\n  height: auto;\n  top: 1px;\n  bottom: 1px;\n  width: 32px;\n  background: var(--sc-input-background-color);\n  color: var(--sc-input-help-text-color);\n  cursor: pointer;\n  font-size: 13px;\n  user-select: none;\n  border-width: 0;\n  padding: 0;\n\n  &:hover:not(.button--disabled) {\n    .quantity__control {\n      color: var(--sc-input-color-hover);\n    }\n  }\n\n  &.button--disabled {\n    background-color: var(--sc-input-background-color-disabled);\n    border-color: var(--sc-input-border-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Small\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n.quantity--small {\n  width: var(--sc-quantity-select-width-small, 76px);\n  height: var(--sc-quantity-control-height-small, 26px);\n\n  .button__decrease,\n  .button__increase {\n    width: 24px;\n    border: none;\n  }\n  .input__control {\n    max-width: 24px;\n  }\n}\n\n.button__decrease {\n  left: 1px;\n  border-radius: var(--border-radius) 0 0 var(--border-radius);\n  border-right: var(--sc-input-border);\n}\n.button__increase {\n  right: 1px;\n  border-radius: 0 var(--border-radius) var(--border-radius) 0;\n  border-left: var(--sc-input-border);\n}\n\n.quantity--is-rtl {\n  .button__decrease {\n    right: 1px;\n    border-left: var(--sc-input-border);\n    border-right: 0;\n  }\n  .button__increase {\n    left: 1px;\n    border-right: var(--sc-input-border);\n    border-left: 0;\n  }\n}\n","import { Component, h, Prop, Element, Event, EventEmitter } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { isRtl } from '../../../functions/page-align';\n\n/**\n * @part base - The elements base wrapper.\n * @part input - The input control.\n * @part minus - The minus control.\n * @part minus-icon - The minus icon.\n * @part plus - The plus control.\n * @part plus-icon - The plus icon.\n */\n@Component({\n  tag: 'sc-quantity-select',\n  styleUrl: 'sc-quantity-select.scss',\n  shadow: true,\n})\nexport class ScQuantitySelect {\n  @Element() el: HTMLScQuantitySelectElement;\n  private input: HTMLInputElement;\n\n  @Prop() clickEl?: HTMLElement;\n\n  @Prop() disabled: boolean;\n  @Prop() max: number = Infinity;\n  @Prop() min: number = 1;\n  @Prop({ mutable: true, reflect: true }) quantity: number = 0;\n\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Inputs focus */\n  @Prop({ mutable: true, reflect: true }) hasFocus: boolean;\n\n  @Event({ cancelable: true }) scChange: EventEmitter<number>;\n\n  /** Emitted when the control receives input. */\n  @Event({ cancelable: true }) scInput: EventEmitter<number>;\n\n  /** Emitted when the control gains focus. */\n  @Event() scFocus: EventEmitter<void>;\n\n  /** Emitted when the control loses focus. */\n  @Event() scBlur: EventEmitter<void>;\n\n  decrease() {\n    if (this.disabled) return;\n    this.quantity = Math.max(this.quantity - 1, this.min);\n    this.scChange.emit(this.quantity);\n    this.scInput.emit(this.quantity);\n  }\n\n  increase() {\n    if (this.disabled) return;\n    this.quantity = Math.min(this.quantity + 1, this.max);\n    this.scChange.emit(this.quantity);\n    this.scInput.emit(this.quantity);\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.scFocus.emit();\n  }\n\n  handleChange() {\n    this.quantity = parseInt(this.input.value) > this.max ? this.max : parseInt(this.input.value);\n    this.scChange.emit(this.quantity);\n  }\n\n  handleInput() {\n    this.quantity = parseInt(this.input.value);\n    this.scInput.emit(this.quantity);\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'quantity': true,\n          // States\n          'quantity--focused': this.hasFocus,\n          'quantity--disabled': this.disabled,\n          'quantity--is-rtl': isRtl(),\n          'quantity--small': this.size === 'small',\n        }}\n      >\n        <button\n          part=\"minus\"\n          aria-label={__('Decrease quantity by one.', 'surecart')}\n          aria-disabled={this.disabled || (this.quantity <= this.min && this.min > 1)}\n          class={{ 'button__decrease': true, 'button--disabled': this.quantity <= this.min && this.min > 1 }}\n          onClick={() => this.quantity > this.min && this.decrease()}\n          disabled={this.disabled || (this.quantity <= this.min && this.min > 1)}\n        >\n          <sc-icon name=\"minus\" exportparts=\"base:minus__icon\"></sc-icon>\n        </button>\n\n        <input\n          part=\"input\"\n          class=\"input__control\"\n          ref={el => (this.input = el as HTMLInputElement)}\n          step=\"1\"\n          type=\"number\"\n          max={this.max}\n          min={this.min}\n          value={this.quantity}\n          disabled={this.disabled}\n          autocomplete=\"off\"\n          role=\"spinbutton\"\n          aria-valuemax={this.max}\n          aria-valuemin={this.min}\n          aria-valuenow={this.quantity}\n          aria-disabled={this.disabled}\n          onChange={() => this.handleChange()}\n          onInput={() => this.handleInput()}\n          onFocus={() => this.handleFocus()}\n          onBlur={() => this.handleBlur()}\n        />\n\n        <button\n          part=\"plus\"\n          aria-label={__('Increase quantity by one.', 'surecart')}\n          class={{ 'button__increase': true, 'button--disabled': this.quantity >= this.max }}\n          onClick={() => this.quantity < this.max && this.increase()}\n          aria-disabled={this.disabled || this.quantity >= this.max}\n          disabled={this.disabled || this.quantity >= this.max}\n        >\n          <sc-icon name=\"plus\" exportparts=\"base:plus__icon\"></sc-icon>\n        </button>\n      </div>\n    );\n  }\n}\n"],"mappings":"iIAMA,MAAMA,EAAY,IAAIC,IAEf,MAAMC,EAAeC,IAC1B,GAAIH,EAAUI,IAAID,GAAM,CACtB,OAAOH,EAAUK,IAAIF,E,KAChB,CACL,MAAMG,EAAUC,MAAMJ,GAAKK,MAAKC,MAAMC,IACpC,GAAIA,EAASC,GAAI,CACf,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,gBAAkBL,EAASM,OAC/B,MAAMC,EAAML,EAAIM,kBAEhB,MAAO,CACLP,GAAID,EAASC,GACbQ,OAAQT,EAASS,OACjBF,IAAKA,GAAOA,EAAIG,QAAQC,gBAAkB,MAAQJ,EAAIK,UAAY,G,KAE/D,CACL,MAAO,CACLX,GAAID,EAASC,GACbQ,OAAQT,EAASS,OACjBF,IAAK,K,KAKXjB,EAAUuB,IAAIpB,EAAKG,GACnB,OAAOA,C,GCjCX,MAAMkB,EAAY,6OAClB,MAAAC,EAAeD,ECOf,MAAAE,EAAA,C,eACkBC,GAAAC,KAAAC,GAAE,mB,aACJF,GAAAC,KAAAC,GAAE,oB,gBACCF,GAAAC,KAAAC,GAAE,mB,eACHF,GAAAC,KAAAC,GAAE,uB,cACHF,GAAAC,KAAAC,GAAE,mB,aACHF,GAAAC,KAAAC,GAAE,uB,aACFF,GAAAC,KAAAC,GAAE,mB,WACJF,GAAAC,KAAAC,GAAE,iB,eACEF,GAAAC,KAAAC,GAAE,qBAGpB,MAAAC,EAAA,IAAAC,U,84CCpBA,MAAMC,EAAuB,o9JAC7B,MAAAC,EAAeD,E,2wEC8HML,GAAAC,KAAAC,GAAE,uBAAAK,KAAAC,OAAAD,KAAAE,mBAAAC,EAAA,OAAAC,IAAA,4CAAAJ,KAAAE,oBAAAC,EAAA,OAAAC,IAAA,2CAAAC,MAAA,oBAAAC,KAAA,gBAAAN,KAAAO,OAAAJ,EAAA,OAAAC,IAAA,4CAAAJ,KAAAO,QAAAP,KAAAQ,MAAA,IAAAC,KAAAC,G,+hBA6BHjB,GAAAC,KAAAiB,QAAQlB,GAAAC,KAAAC,GAAE,0CAAAK,KAAAY,KAAAZ,KAAAa,SAAAV,EAAA,QAAAE,MAAA,oBAAAC,KAAA,mBAKXb,GAAAC,KAAAC,GAAE,uBAAAK,KAAAc,YAAAd,KAAAe,WAAAZ,EAAA,OAAAC,IAAA,2CAAAC,MAAA,yBAAAW,QAAA,IAAAhB,KAAAiB,SAAAC,OAAAC,UAAAC,I,wDAaS3B,GAAAC,KAAAiB,QAAQlB,GAAAC,KAAAC,GAAE,sCAAAK,KAAAY,KAAAZ,KAAAa,OAAAQ,SAAA,GAAAlB,EAAA,WAAAC,IAAA,2CAAAkB,YAAA,yBAAAjB,MAAA,eAAAO,KAAA,MAAAT,EAAA,QAAAC,IAAA,2CAAAC,MAAA,qBAIWZ,GAAAC,KAAAC,GAAE,0B,qCClLrD,MAAM4B,EAAsB,2pIAC5B,MAAAC,EAAeD,E,0uCC4FO9B,GAAAC,KAAAC,GAAE,wDAAAK,KAAAyB,UAAAzB,KAAAc,UAAAd,KAAA0B,KAAA1B,KAAA0B,IAAA,EAAArB,MAAA,CAAAsB,iBAAA,wBAAA3B,KAAAc,UAAAd,KAAA0B,KAAA1B,KAAA0B,IAAA,GAAAV,QAAA,IAAAhB,KAAAc,SAAAd,KAAA0B,KAAA1B,KAAA4B,WAAAH,SAAAzB,KAAAyB,UAAAzB,KAAAc,UAAAd,KAAA0B,KAAA1B,KAAA0B,IAAA,GAAAvB,EAAA,WAAAC,IAAA,2CAAAQ,KAAA,QAAAU,YAAA,sBAAAnB,EAAA,SAAAC,IAAA,2CAAAE,KAAA,QAAAD,MAAA,iBAAAwB,IAAAC,GAAA9B,KAAA+B,MAAAD,EAAAE,KAAA,IAAAC,KAAA,SAAAC,IAAAlC,KAAAkC,IAAAR,IAAA1B,KAAA0B,IAAAS,MAAAnC,KAAAc,SAAAW,SAAAzB,KAAAyB,SAAAW,aAAA,MAAAC,KAAA,6BAAArC,KAAAkC,IAAA,gBAAAlC,KAAA0B,IAAA,gBAAA1B,KAAAc,SAAA,gBAAAd,KAAAyB,SAAAa,SAAA,IAAAtC,KAAAuC,eAAAC,QAAA,IAAAxC,KAAAyC,cAAAC,QAAA,IAAA1C,KAAA2C,cAAAC,OAAA,IAAA5C,KAAA6C,eAAA1C,EAAA,UAAAC,IAAA,2CAAAE,KAAA,oBAiCFb,GAAAC,KAAAC,GAAE,wCAAAU,MAAA,CAAAyC,iBAAA,wBAAA9C,KAAAc,UAAAd,KAAAkC,KAAAlB,QAAA,IAAAhB,KAAAc,SAAAd,KAAAkC,KAAAlC,KAAA+C,WAAA,gBAAA/C,KAAAyB,UAAAzB,KAAAc,UAAAd,KAAAkC,IAAAT,SAAAzB,KAAAyB,UAAAzB,KAAAc,UAAAd,KAAAkC,KAAA/B,EAAA,WAAAC,IAAA,2CAAAQ,KAAA,OAAAU,YAAA,qB","ignoreList":[]}