{"version":3,"names":["scOrderCss","ScOrderStyle0","wp","i18n","__","h","slot","style","type","_h","_g","checkout","discount","promotion","shippingMethodName","total_display_amount","currency","proration_amount","amount_due_display_amount","paid_amount","paid_display_amount","refunded_amount","Fragment","refunded_display_amount","net_paid_display_amount","tax_reverse_charged_amount","manualPaymentMethod","name","instructions","key","manualPaymentTitle","manualPaymentInstructions","this","loading","renderLoading","status","_c","order","_d","created_at_date","paymentMethod","payment_method","class","renderContent","_e","statement_url","href","_f","target","purchases","length","heading"],"sources":["src/components/controllers/dashboard/order/sc-order.scss?tag=sc-order&encapsulation=shadow","src/components/controllers/dashboard/order/sc-order.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.order__row {\n  padding: var(--sc-spacing-large);\n  display: grid;\n  gap: var(--sc-spacing-small);\n}\n","import { Component, Element, Fragment, h, Prop, State } from '@stencil/core';\nimport { __, _n } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\nimport apiFetch from '../../../../functions/fetch';\nimport { onFirstVisible } from '../../../../functions/lazy';\nimport { formatTaxDisplay } from '../../../../functions/tax';\nimport { Checkout, ManualPaymentMethod, Order, Product, Purchase, ShippingChoice, ShippingMethod } from '../../../../types';\n\n@Component({\n  tag: 'sc-order',\n  styleUrl: 'sc-order.scss',\n  shadow: true,\n})\nexport class ScOrder {\n  @Element() el: HTMLScOrdersListElement;\n  @Prop() orderId: string;\n  @Prop() customerIds: string[];\n  @Prop() heading: string;\n\n  @State() order: Order;\n  @State() purchases: Purchase[];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  /** Only fetch if visible */\n  componentDidLoad() {\n    onFirstVisible(this.el, () => {\n      this.fetchOrder();\n      this.fetchDownloads();\n    });\n  }\n\n  async fetchOrder() {\n    try {\n      this.loading = true;\n      await this.getOrder();\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async fetchDownloads() {\n    try {\n      this.busy = true;\n      this.purchases = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/purchases`, {\n          expand: ['product', 'product.downloads', 'download.media'],\n          order_ids: [this.orderId],\n          customer_ids: this.customerIds,\n          downloadable: true,\n        }),\n      })) as Purchase[];\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /** Get order */\n  async getOrder() {\n    this.order = (await apiFetch({\n      path: addQueryArgs(`surecart/v1/orders/${this.orderId}`, {\n        expand: [\n          'checkout',\n          'checkout.line_items',\n          'line_item.price',\n          'line_item.fees',\n          'line_item.variant',\n          'variant.image',\n          'price.product',\n          'checkout.manual_payment_method',\n          'checkout.payment_method',\n          'checkout.selected_shipping_choice',\n          'shipping_choice.shipping_method',\n          'payment_method.card',\n          'payment_method.payment_instrument',\n          'payment_method.paypal_account',\n          'payment_method.bank_account',\n          'checkout.discount',\n          'discount.promotion',\n          'checkout.charge',\n        ],\n      }),\n    })) as Order;\n  }\n\n  renderLoading() {\n    return (\n      <sc-flex flexDirection=\"column\" style={{ gap: '1em' }}>\n        <sc-skeleton style={{ width: '20%', display: 'inline-block' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '60%', display: 'inline-block' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '40%', display: 'inline-block' }}></sc-skeleton>\n      </sc-flex>\n    );\n  }\n\n  renderEmpty() {\n    return <sc-empty icon=\"shopping-bag\">{__('Order not found.', 'surecart')}</sc-empty>;\n  }\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (!this.order?.id) {\n      return this.renderEmpty();\n    }\n\n    const checkout = this.order?.checkout as Checkout;\n    const shippingMethod = (checkout?.selected_shipping_choice as ShippingChoice)?.shipping_method as ShippingMethod;\n    const shippingMethodName = shippingMethod?.name;\n\n    return (\n      <Fragment>\n        {(checkout?.line_items?.data || []).map(item => {\n          return (\n            <sc-product-line-item\n              key={item.id}\n              image={item?.image}\n              name={(item?.price?.product as Product)?.name}\n              price={item?.price?.name}\n              variant={item?.variant_display_options}\n              editable={false}\n              removable={false}\n              quantity={item.quantity}\n              amount={item.subtotal_display_amount}\n              trial={item?.price?.trial_text}\n              interval={`${item?.price?.short_interval_text} ${item?.price?.short_interval_count_text}`}\n              scratch={item?.scratch_display_amount}\n              purchasableStatus={item?.purchasable_status_display}\n              fees={item?.fees?.data}\n            />\n          );\n        })}\n\n        {checkout?.subtotal_amount !== checkout?.total_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Subtotal', 'surecart')}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.subtotal_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.trial_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Trial', 'surecart')}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.trial_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.discounts && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Discounts', 'surecart')}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.discounts_display}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.discount?.promotion?.code && (\n          <sc-line-item>\n            <span slot=\"description\">\n              {__('Discount', 'surecart')}\n              <br />\n              <sc-tag type=\"success\">\n                {__('Coupon:', 'surecart')} {checkout?.discount?.promotion?.code}\n              </sc-tag>\n            </span>\n\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.discounts_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.shipping_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{`${__('Shipping', 'surecart')} ${shippingMethodName ? `(${shippingMethodName})` : ''}`}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.shipping_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.tax_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{`${formatTaxDisplay(checkout?.tax_label, checkout?.tax_status === 'estimated')} (${checkout?.tax_percent}%)`}</span>\n            <span slot=\"price\">{checkout?.tax_display_amount}</span>\n            {!!checkout?.tax_inclusive_amount && <span slot=\"price-description\">{`(${__('included', 'surecart')})`}</span>}\n          </sc-line-item>\n        )}\n\n        <sc-divider style={{ '--spacing': 'var(--sc-spacing-x-small)' }}></sc-divider>\n\n        <sc-line-item\n          style={{\n            'width': '100%',\n            '--price-size': 'var(--sc-font-size-x-large)',\n          }}\n        >\n          <span slot=\"title\">{__('Total', 'surecart')}</span>\n          <span slot=\"price\">{checkout?.total_display_amount}</span>\n          <span slot=\"currency\">{checkout?.currency}</span>\n        </sc-line-item>\n\n        {!!checkout?.proration_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Proration', 'surecart')}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.proration_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.applied_balance_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Applied Balance', 'surecart')}</span>\n            <span\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n              slot=\"price\"\n            >\n              {checkout?.applied_balance_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {!!checkout?.credited_balance_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Credited Balance', 'surecart')}</span>\n            <span\n              slot=\"price\"\n              style={{\n                'font-weight': 'var(--sc-font-weight-semibold)',\n                'color': 'var(--sc-color-gray-800)',\n              }}\n            >\n              {checkout?.credited_balance_display_amount}\n            </span>\n          </sc-line-item>\n        )}\n\n        {checkout?.amount_due !== checkout?.total_amount && (\n          <sc-line-item\n            style={{\n              'width': '100%',\n              '--price-size': 'var(--sc-font-size-x-large)',\n            }}\n          >\n            <span slot=\"title\">{__('Amount Due', 'surecart')}</span>\n            <span slot=\"price\">{checkout?.amount_due_display_amount}</span>\n            <span slot=\"currency\">{checkout?.currency}</span>\n          </sc-line-item>\n        )}\n        <sc-divider style={{ '--spacing': 'var(--sc-spacing-x-small)' }}></sc-divider>\n\n        {!!checkout?.paid_amount && (\n          <sc-line-item\n            style={{\n              'width': '100%',\n              '--price-size': 'var(--sc-font-size-x-large)',\n            }}\n          >\n            <span slot=\"title\">{__('Paid', 'surecart')}</span>\n            <span slot=\"price\">{checkout?.paid_display_amount}</span>\n            <span slot=\"currency\">{checkout?.currency}</span>\n          </sc-line-item>\n        )}\n        {!!checkout?.refunded_amount && (\n          <Fragment>\n            <sc-line-item\n              style={{\n                'width': '100%',\n                '--price-size': 'var(--sc-font-size-x-large)',\n              }}\n            >\n              <span slot=\"description\">{__('Refunded', 'surecart')}</span>\n              <span slot=\"price\">{checkout?.refunded_display_amount}</span>\n            </sc-line-item>\n            <sc-line-item\n              style={{\n                'width': '100%',\n                '--price-size': 'var(--sc-font-size-x-large)',\n              }}\n            >\n              <span slot=\"title\">{__('Net Payment', 'surecart')}</span>\n              <span slot=\"price\">{checkout?.net_paid_display_amount}</span>\n            </sc-line-item>\n          </Fragment>\n        )}\n        {checkout?.tax_reverse_charged_amount > 0 && (\n          <sc-line-item>\n            <span slot=\"description\">{__('*Tax to be paid on reverse charge basis', 'surecart')}</span>\n          </sc-line-item>\n        )}\n      </Fragment>\n    );\n  }\n\n  render() {\n    const checkout = this?.order?.checkout as Checkout;\n    const manualPaymentMethod = checkout?.manual_payment_method as ManualPaymentMethod;\n    return (\n      <sc-spacing style={{ '--spacing': 'var(--sc-spacing-large)' }}>\n        <sc-dashboard-module error={this.error}>\n          <span slot=\"heading\">{this.loading ? <sc-skeleton style={{ width: '120px' }}></sc-skeleton> : `#${this?.order?.number}`}</span>\n          {!this.loading && !checkout?.live_mode && (\n            <sc-tag type=\"warning\" slot=\"end\">\n              {__('Test Mode', 'surecart')}\n            </sc-tag>\n          )}\n\n          {!!manualPaymentMethod?.name && !!manualPaymentMethod?.instructions && (\n            <sc-order-manual-instructions manualPaymentTitle={manualPaymentMethod?.name} manualPaymentInstructions={manualPaymentMethod?.instructions} />\n          )}\n\n          <sc-card no-padding={!this.loading}>\n            {this.loading ? (\n              this.renderLoading()\n            ) : (\n              <Fragment>\n                <sc-stacked-list>\n                  <sc-stacked-list-row style={{ '--columns': '2' }}>\n                    <div>{__('Order Status', 'surecart')}</div>\n                    <sc-order-status-badge status={this?.order?.status}></sc-order-status-badge>\n                  </sc-stacked-list-row>\n                  <sc-stacked-list-row style={{ '--columns': '2' }}>\n                    <div>{__('Date', 'surecart')}</div>\n                    <span>{this.order?.created_at_date}</span>\n                  </sc-stacked-list-row>\n\n                  <sc-stacked-list-row style={{ '--columns': '2' }}>\n                    <div>{__('Payment Method', 'surecart')}</div>\n                    <sc-payment-method paymentMethod={checkout?.payment_method}></sc-payment-method>\n                  </sc-stacked-list-row>\n\n                  <div class=\"order__row\">{this.renderContent()}</div>\n                </sc-stacked-list>\n              </Fragment>\n            )}\n          </sc-card>\n        </sc-dashboard-module>\n\n        {this.order?.statement_url && (\n          <sc-button type=\"primary\" href={this.order?.statement_url} target=\"_blank\">\n            <sc-icon name=\"inbox\" slot=\"prefix\"></sc-icon>\n            {__('Download Receipt/Invoice', 'surecart')}\n          </sc-button>\n        )}\n\n        {!!this.purchases?.length && <sc-purchase-downloads-list heading={__('Downloads', 'surecart')} purchases={this.purchases}></sc-purchase-downloads-list>}\n      </sc-spacing>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}