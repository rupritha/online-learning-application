{"file":"sc-line-item-tax2.js","mappings":";;;;AAAA,MAAM,gBAAgB,GAAG,sBAAsB,CAAC;AAChD,4BAAe,gBAAgB;;;;;;;;;;;;oBCcf,eAAO,CAAC,UAAE;;;;qCAQd,UAAE;;;;;;;;;6CAqBD,UAAE;;;;;;;AASf;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.scss?tag=sc-line-item-tax&encapsulation=shadow","src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Prop, h, Fragment } from '@stencil/core';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { openWormhole } from 'stencil-wormhole';\nimport { Checkout } from '../../../../types';\n\n@Component({\n  tag: 'sc-line-item-tax',\n  styleUrl: 'sc-line-item-tax.scss',\n  shadow: true,\n})\nexport class ScLineItemTax {\n  @Prop() order: Checkout;\n  @Prop() loading: boolean;\n\n  renderLabel() {\n    let label = sprintf(__('Estimated %s', 'surecart'), this?.order?.tax_label || '');\n\n    if (this?.order?.tax_status === 'calculated') {\n      label = this.order?.tax_label || '';\n    }\n\n    return (\n      <Fragment>\n        {`${__('Tax', 'surecart')} ${label}`}\n      </Fragment>\n    );\n  }\n\n  render() {\n    // hide if tax is 0\n    if (!this?.order?.tax_amount) {\n      return null;\n    }\n\n    return (\n      <sc-line-item>\n        <span slot=\"description\">{this.renderLabel()}</span>\n\n        {this.order?.tax_exclusive_amount && <span slot=\"price\">{this.order?.tax_exclusive_display_amount}</span>}\n\n        {this.order?.tax_inclusive_amount && (\n          <span slot=\"price-description\">\n            {'('}\n            {this.order?.tax_inclusive_display_amount}\n            {__('included', 'surecart')}\n            {')'}\n          </span>\n        )}\n      </sc-line-item>\n    );\n  }\n}\n\nopenWormhole(ScLineItemTax, ['order', 'loading'], false);\n"],"version":3}