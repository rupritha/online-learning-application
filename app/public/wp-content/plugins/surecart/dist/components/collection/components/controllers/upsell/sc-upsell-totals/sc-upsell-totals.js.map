{"version":3,"file":"sc-upsell-totals.js","sourceRoot":"","sources":["../../../../../src/components/controllers/upsell/sc-upsell-totals/sc-upsell-totals.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * External dependencies.\n */\nimport { Component, Fragment, h } from '@stencil/core';\nimport { state } from '@store/upsell';\nimport { __, sprintf } from '@wordpress/i18n';\n@Component({\n  tag: 'sc-upsell-totals',\n  styleUrl: 'sc-upsell-totals.css',\n  shadow: true,\n})\nexport class ScUpsellTotals {\n  renderAmountDue() {\n    return state.amount_due > 0 ? state?.line_item?.total_display_amount : !!state?.line_item?.trial_amount ? __('Trial', 'surecart') : __('Free', 'surecart');\n  }\n\n  // Determine if the currency should be displayed to avoid duplication in the amount display.\n  getCurrencyToDisplay() {\n    return state?.line_item?.total_default_currency_display_amount?.toLowerCase()?.includes(state?.line_item?.currency?.toLowerCase())\n      ? ''\n      : state?.line_item?.currency?.toUpperCase();\n  }\n\n  renderConversion() {\n    // need to check the checkout for a few things.\n    const checkout = state?.checkout;\n\n    if (!checkout?.show_converted_total) {\n      return null;\n    }\n\n    // the currency is the same as the current currency.\n    if (checkout?.currency === checkout?.current_currency) {\n      return null;\n    }\n\n    // there is no amount due.\n    if (!state?.line_item?.total_amount) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <sc-divider></sc-divider>\n        <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n          <span slot=\"title\">\n            <slot name=\"charge-amount-description\">{sprintf(__('Payment Total', 'surecart'), state?.line_item?.currency?.toUpperCase())}</slot>\n          </span>\n          <span slot=\"price\">\n            {this.getCurrencyToDisplay() && <span class=\"currency-label\">{this.getCurrencyToDisplay()}</span>}\n            {state?.line_item?.total_default_currency_display_amount}\n          </span>\n        </sc-line-item>\n        <sc-line-item>\n          <span slot=\"description\" class=\"conversion-description\">\n           {/* translators: %s is the currency code */}\n            {sprintf(__('Your payment will be processed in %s.', 'surecart'), state?.line_item?.currency?.toUpperCase())}\n          </span>\n        </sc-line-item>\n      </Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <sc-summary open-text=\"Total\" closed-text=\"Total\" collapsible={true} collapsed={true}>\n        {!!state.line_item?.id && <span slot=\"price\">{this.renderAmountDue()}</span>}\n\n        <sc-divider></sc-divider>\n\n        <sc-line-item>\n          <span slot=\"description\">{__('Subtotal', 'surecart')}</span>\n          <span slot=\"price\">{state.line_item?.subtotal_display_amount}</span>\n        </sc-line-item>\n\n        {(state?.line_item?.fees?.data || [])\n          .filter(fee => fee.fee_type === 'upsell') // only upsell fees.\n          .map(fee => {\n            return (\n              <sc-line-item>\n                <span slot=\"description\">\n                  {fee.description} {`(${__('one time', 'surecart')})`}\n                </span>\n                <span slot=\"price\">{fee?.display_amount}</span>\n              </sc-line-item>\n            );\n          })}\n\n        {!!state.line_item?.tax_amount && (\n          <sc-line-item>\n            <span slot=\"description\">{__('Tax', 'surecart')}</span>\n            <span slot=\"price\">{state.line_item?.tax_display_amount}</span>\n          </sc-line-item>\n        )}\n\n        <sc-divider></sc-divider>\n\n        <sc-line-item style={{ '--price-size': 'var(--sc-font-size-x-large)' }}>\n          <span slot=\"title\">{__('Total', 'surecart')}</span>\n          <span slot=\"price\">{state.line_item?.total_display_amount}</span>\n        </sc-line-item>\n\n        {this.renderConversion()}\n      </sc-summary>\n    );\n  }\n}\n"]}